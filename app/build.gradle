def rootConfiguration = {}
apply from: project(':app').file('config.gradle'), to: rootConfiguration

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'realm-android'

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath "io.fabric.tools:gradle:1.+"
    }
}

//apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
    mavenCentral()
}


android {
    compileSdkVersion rootConfiguration.compileSdkVersion
    buildToolsVersion rootConfiguration.buildToolsVersion

    defaultConfig {
        applicationId "ai.susi"
        minSdkVersion rootConfiguration.minSdkVersion
        targetSdkVersion rootConfiguration.targetSdkVersion
        versionCode 6
        versionName "1.05"
        vectorDrawables.useSupportLibrary = true
        // for unit test
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
        disable 'InvalidPackage'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:${rootConfiguration.supportLibraryVersion}"
    implementation "com.android.support:recyclerview-v7:${rootConfiguration.supportLibraryVersion}"
    implementation "com.android.support:design:${rootConfiguration.supportLibraryVersion}"
    implementation "com.android.support:cardview-v7:${rootConfiguration.supportLibraryVersion}"
    implementation "com.android.support:support-v4:${rootConfiguration.supportLibraryVersion}"

    //piechart
    implementation "com.github.PhilJay:MPAndroidChart:${rootConfiguration.mpAndroidChartVersion}"

    //Leak Canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:${rootConfiguration.leakCanaryVersion}"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${rootConfiguration.leakCanaryVersion}"
    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${rootConfiguration.leakCanaryVersion}"

    //butterknife
    implementation "com.jakewharton:butterknife:${rootConfiguration.butterKnifeVersion}"
    kapt "com.jakewharton:butterknife-compiler:${rootConfiguration.butterKnifeVersion}"

    //For Picasso
    implementation "com.squareup.picasso:picasso:${rootConfiguration.picassoVersion}"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:${rootConfiguration.retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${rootConfiguration.retrofitVersion}"
    debugImplementation "com.squareup.okhttp3:logging-interceptor:${rootConfiguration.okHttpVersion}"

    //For Link Previews
    implementation "org.jsoup:jsoup:${rootConfiguration.jsoupVersion}" // required
    implementation "com.leocardz:link-preview:${rootConfiguration.linkPreviewVersion}"

    //preference UI
    implementation "com.takisoft.fix:preference-v7:${rootConfiguration.preferenceVersion}"

    //unit test
    androidTestImplementation "com.android.support:support-annotations:${rootConfiguration.supportLibraryVersion}"
    androidTestImplementation "com.android.support.test:runner:${rootConfiguration.testVersion}"
    androidTestImplementation "com.android.support.test:rules:${rootConfiguration.testVersion}"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${rootConfiguration.espressoVersion}"

    //realm adapter
    implementation "io.realm:android-adapters:${rootConfiguration.realmVersion}"

    //waiting dots
    implementation "com.github.tajchert:WaitingDots:${rootConfiguration.waitingDotsVersion}"
    implementation("com.crashlytics.sdk.android:crashlytics:${rootConfiguration.crashlyticsVersion}") {
        transitive = true
    }
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:${rootConfiguration.kotlinVersion}"
}